user <%= scope.lookupvar('nginx::config::nx_daemon_user') %>;
worker_processes <%= worker_processes_real %>;

error_log  <%= scope.lookupvar('nginx::params::nx_logdir')%>/error.log;
pid        <%= scope.lookupvar('nginx::params::nx_pid')%>;

events {
  worker_connections <%= scope.lookupvar('nginx::params::nx_worker_connections') %>;
  <% if scope.lookupvar('nginx::params::nx_multi_accept' == 'on') %>multi_accept on;<% end %>
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  access_log  <%= scope.lookupvar('nginx::params::nx_logdir')%>/access.log;

  sendfile    <%= scope.lookupvar('nginx::params::nx_sendfile')%>;

  <% if scope.lookupvar('nginx::params::nx_tcp_nopush' == 'on') %>
  tcp_nopush  on;
  <% end %>

  tcp_nodelay        <%= scope.lookupvar('nginx::params::nx_tcp_nodelay')%>;

  <% if scope.lookupvar('nginx::params::nx_gzip' == 'on') %> 
  gzip         on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";
	gzip_comp_level 9;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_static on;
  <% end %>

  server_tokens off;
  ## Start: Size Limits & Buffer Overflows ##
  client_header_buffer_size 1k;
  large_client_header_buffers 4 32k;
  # END: Size Limits & Buffer Overflows ##

  ## Start: Timeouts ##
  client_body_timeout   10;
  client_header_timeout 10;
  keepalive_timeout     <%= scope.lookupvar('nginx::params::nx_keepalive_timeout')%>;
  send_timeout          10;
  ## End: Timeouts ## 

  server_names_hash_bucket_size  128;

  include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
